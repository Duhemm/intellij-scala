<!--TODO: rewrite this with Scala worksheets -->
<project name="Generate Completion test" default="generate.test">

  <property name="base.dir" value="../../../../../../../"/>
  <property name="output.dir" value="${base.dir}/test/org/jetbrains/plugins/scala/lang/completion/generated"/>
  <property name="testdata.dir" value="${base.dir}/testdata/completion"/>

  <target name="generate.test" depends="clear.output">
<!--  <target name="generate.test" depends="clear.output, move.testdata">-->

    <!--language=javascript-->
    <script language="javascript"><![CDATA[
      // noinspection JSUnresolvedFunction,JSUnresolvedVariable

      load("nashorn:mozilla_compat.js");
      importClass(java.io.File)
      importClass(java.lang.System)

      var outputDir = project.getProperty("output.dir");
      var testDataDir = project.getProperty("testdata.dir");
      var fs = project.createDataType("fileset");
      fs.setDir(new File(testDataDir));

      var ds = fs.getDirectoryScanner(project);
      var srcDirs = ds.getIncludedDirectories();

      System.out.println("output dir: " + new File(outputDir).getCanonicalPath());
      System.out.println("test data dir: " + new File(testDataDir).getCanonicalPath());

      System.out.println("Starting generation...")
      for (var i = 0; i < srcDirs.length; i++) {
        echo = project.createTask("echo");
        var srcDir = srcDirs[i]
        var dirStr = srcDir.toString().replace("\\", "/");
        //srcDirs contains single empty dir (probably denotes current directory)
        if (dirStr === "")
          continue

        //ignoring Sbt folder... just because I currently have no time to refactor that shit...
        //tests for Sbt were written without keeping in mind that tests are auto-generated
        if (dirStr.toLowerCase().startsWith("sbt"))
          continue

        System.out.println("Processing dir: " + dirStr)

        var convertedDirStr = "";
        var str = "";
        while (dirStr !== "") {
          var index = dirStr.indexOf("/");
          var k = ""
          if (index === -1) {
            k = dirStr.substring(0, dirStr.length());
            dirStr = ""
          } else {
            k = dirStr.substring(0, index);
            dirStr = dirStr.substring(index + 1, dirStr.length());
          }
          if (k !== "") {
            convertedDirStr = convertedDirStr + k + "/";
            k = k.substring(0, 1).toUpperCase() + k.substring(1, k.length());
            str = str + k;
          }
        }

        fs = project.createDataType("fileset");
        var convertedDir = new File(testDataDir + "/" + convertedDirStr);
        System.out.println("    convertedDir: " + convertedDir)
        fs.setDir(convertedDir);

        ds = fs.getDirectoryScanner(project);
        var files = ds.getIncludedFiles();

        var filesNumber = 0;
        for (j = 0; j < files.length; j++) {
          var fileStr = files[j].toString();
          var isFile = fileStr.indexOf("/") === -1
          if (isFile)
            filesNumber += 1
        }

        if (filesNumber === 0) {
          System.out.println("No files found in folder " + ds);
          continue;
        }

        var className = "Completion" + str + "Test";
        var text = "package org.jetbrains.plugins.scala.lang.completion\n" +
                "package generated\n\n" +
                "//////////////////////////////////////////////////////////////////////////////////////\n" +
                "// ATTENTION! This class was generated by build script `CompletionTestsGenerator.xml` please don't change this\n" +
                "////////////////////////////////////////////////////////////////////////////////////\n" +
                "class " + className + " extends FileTestDataCompletionTestBase " +
                "{\n\n" +
                "  override def folderPath: String = super.folderPath + \"" + convertedDirStr + "\"";

        for (var j = 0; j < files.length; j++) {
          var fileStr = files[j].toString();
          if (fileStr.indexOf("\\") === -1 && !fileStr.startsWith("Source")) {
            text += "\n\n  def test" + fileStr.substring(0, fileStr.indexOf(".")) + "(): Unit = doTest()"
          }
        }

        text = text + "\n}";
        var file = new File(outputDir + "/" + className + ".scala");
        if (!file.createNewFile()) {
            System.err.println("  Can't create file: " + file);
        }
        echo.setFile(file);
        echo.addText(text);
        echo.perform();
      }
      ]]></script>
  </target>

  <target name="clear.output">
    <mkdir dir="${output.dir}"/>
    <delete includeemptydirs="true">
      <fileset dir="${output.dir}"/>
    </delete>
    <mkdir dir="${output.dir}"/>
  </target>

<!--  <target name="move.testdata">-->
<!--     <copy toDir="${base.dir}/classes/production/Scala/testdata">-->
<!--       <fileset dir="${base.dir}/testdata"/>-->
<!--     </copy>-->
<!--    <copy toDir="${base.dir}/classes/test/Scala/testdata">-->
<!--       <fileset dir="${base.dir}/testdata"/>-->
<!--     </copy>-->
<!--  </target>-->
</project>